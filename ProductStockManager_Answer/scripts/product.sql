
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
CREATE TABLE PRODUCT(
    PRODUCT_ID VARCHAR2(20) PRIMARY KEY,
    P_NAME VARCHAR2(30) NOT NULL,
    PRICE NUMBER NOT NULL,
    DESCRIPTION VARCHAR2(40),
    STOCK NUMBER NOT NULL
);

COMMENT ON COLUMN PRODUCT.PRODUCT_ID IS '상품아이디';
COMMENT ON COLUMN PRODUCT.P_NAME IS '상품명';
COMMENT ON COLUMN PRODUCT.PRICE IS '상품가격';
COMMENT ON COLUMN PRODUCT.DESCRIPTION IS '부가설명';
COMMENT ON COLUMN PRODUCT.STOCK IS '재고';

INSERT INTO PRODUCT VALUES('nb_ss7', '삼성노트북', 1570000, '시리즈7', 10);
INSERT INTO PRODUCT VALUES('nb_ama4', '맥북에어', 1200000, 'xcode4', 20);
INSERT INTO PRODUCT VALUES('pc_ibm', 'ibmPC', 750000, 'window8', 5);


DROP TABLE PRODUCT_IO CASCADE CONSTRAINTS;

CREATE TABLE PRODUCT_IO(
    IO_NUM NUMBER PRIMARY KEY,
    PRODUCT_ID VARCHAR2(30) NOT NULL,
    IO_DATE DATE DEFAULT SYSDATE NOT NULL,
    AMOUNT NUMBER NOT NULL,
    STATUS CHAR(6) CHECK (STATUS IN ('입고', '출고')),
    FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT ON DELETE CASCADE
);


COMMENT ON COLUMN PRODUCT_IO.IO_NUM IS '입출고이력번호';
COMMENT ON COLUMN PRODUCT_IO.PRODUCT_ID IS '상품아이디';
COMMENT ON COLUMN PRODUCT_IO.IO_DATE IS '입출고날짜';
COMMENT ON COLUMN PRODUCT_IO.AMOUNT IS '입출고수량';
COMMENT ON COLUMN PRODUCT_IO.STATUS IS '입출고상태';


DROP SEQUENCE SEQ_PRODUCT_IO_NUM;

CREATE SEQUENCE SEQ_PRODUCT_IO_NUM
NOCACHE;

CREATE OR REPLACE TRIGGER TRG_PRODUCT
    AFTER INSERT
    ON PRODUCT_IO
    FOR EACH ROW
BEGIN
    IF :NEW.STATUS = '입고'
    THEN 
        UPDATE PRODUCT
        SET STOCK = STOCK + :NEW.AMOUNT
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    ELSIF :NEW.STATUS = '출고'
    THEN
        UPDATE PRODUCT
        SET STOCK = STOCK - :NEW.AMOUNT
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    END IF;
END;
/


INSERT INTO PRODUCT_IO VALUES(SEQ_PRODUCT_IO_NUM.NEXTVAL, 'nb_ss7', '19/07/01', 30, '입고');
INSERT INTO PRODUCT_IO VALUES(SEQ_PRODUCT_IO_NUM.NEXTVAL, 'nb_ss7', '19/07/02', 3, '출고');
INSERT INTO PRODUCT_IO VALUES(SEQ_PRODUCT_IO_NUM.NEXTVAL, 'pc_ibm', '19/07/02', 10, '입고');


COMMIT;


CREATE OR REPLACE VIEW V_IO
AS SELECT IO_NUM, PRODUCT_ID, P_NAME, IO_DATE, AMOUNT, STATUS 
   FROM PRODUCT_IO 
   JOIN PRODUCT USING(PRODUCT_ID);

